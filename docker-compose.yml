version: "3"

services:
  web:
    build:
      context: .
    ports:
      - "1775:1775"
    container_name: ems_web
    environment:
      POSTGRES_DB: "ems_docker_db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      CELERY_BROKER_URL: 'redis://redis:6379/0'
    depends_on:
      - db
      - redis_db
    restart: always
    networks:
      - ems_web_net
    volumes:
      - .:/ems_web
    expose:
      - "1775"
    command: >
      sh -c "python manage.py collectstatic --no-input && python manage.py migrate && python manage.py createsuperuser_if_none_exists && python manage.py runserver 0.0.0.0:1775"

  db:
    image: postgres:9.6
    environment:
      POSTGRES_DB: "ems_docker_db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    expose:
      - "5432"
    restart: on-failure
    volumes:
    - ems_web_db_data:/var/lib/postgresql/data
    networks:
      - ems_web_net

  redis_db:
    container_name: redis
    hostname: redis
    image: redis:latest
    networks:
      - ems_web_net
    expose:
      - "6379"
    restart: on-failure

  celery:
    build: .
    user: nobody
    command: celery -A ems worker -l INFO
    environment:
      POSTGRES_DB: "ems_docker_db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - .:/usr/src/app
    depends_on:
      - db
      - redis_db
    networks:
      - ems_web_net
    restart: on-failure

networks:
  ems_web_net:
    driver: bridge

volumes:
  ems_web_db_data: